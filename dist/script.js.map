{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/js/createDomTree.js","webpack:///./src/js/keyboard.js","webpack:///./src/js/keyboardEventHandler.js","webpack:///./src/js/keyboardLayoutEnRu.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAyC;AACU;;AAEnD;AACA,EAAE,uEAAa;AACf,EAAE,qDAAQ;AACV,CAAC;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEO;;;;;;;;;;;;;AClDP;AAAA;AAAA;AAAA;AAAA;AAA8D;AAGhC;;AAEvB;AACP;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sEAAkB;AACvC,eAAe,gEAAY;AAC3B;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe,sEAAkB;AACjC;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,iBAAiB,uEAAW;AAC5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,kFAAoB;;AAExB;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA,sEAAsE,SAAS;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;;;;;;;;;;;;;ACjZP;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;;;;;;;;;;;;;;;;;;;ACtDP;AACO;AACP;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACA;;AAEA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import { Keyboard } from './js/keyboard';\nimport { createDomTree } from './js/createDomTree';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  createDomTree();\n  Keyboard.init(document.querySelector('.keyboard > .wrapper'));\n});\n","function createSection(className) {\n  const section = document.createElement('section');\n  const div = document.createElement('div');\n  div.classList.add('wrapper');\n  if (className) section.classList.add(className);\n  section.append(div);\n  return section;\n}\n\nexport const createDomTree = () => {\n  const header = document.createElement('header');\n  const main = document.createElement('main');\n  const footer = document.createElement('footer');\n  const div = document.createElement('div');\n  const textarea = document.createElement('textarea');\n  const os = document.createElement('p');\n  const langChange = document.createElement('p');\n\n  os.textContent = 'OS type: Windows.';\n  langChange.textContent = 'Language change: Alt + Shift, Ctrl + Shift, keyboard key \"En\"(\"Рус\").';\n  os.classList.add('p');\n  langChange.classList.add('p');\n  div.classList.add('wrapper');\n  header.classList.add('header');\n  header.append(div);\n  main.classList.add('main');\n  footer.classList.add('footer');\n  footer.append(div);\n\n  const screen = createSection('screen');\n  const keyboard = createSection('keyboard');\n\n  main.append(screen);\n  main.append(keyboard);\n\n  document.body.append(header);\n  document.body.append(main);\n  document.body.append(footer);\n\n  textarea.classList.add('textarea', 'use-keyboard-input');\n\n  document.querySelector('.screen > .wrapper')\n    .appendChild(os);\n  document.querySelector('.screen > .wrapper')\n    .appendChild(langChange);\n\n  document.querySelector('.screen > .wrapper')\n    .appendChild(textarea);\n};\n\nexport const Spare = '';\n","import { keyboardEventHandler } from './keyboardEventHandler';\nimport {\n  keyboardLayoutEnRu, brakingElementsArr, languagesArr, getLanguage,\n} from './keyboardLayoutEnRu';\n\nexport const Keyboard = {\n  elements: {\n    main: null,\n    keyboardContainer: null,\n    keys: [],\n  },\n\n  properties: {\n    value: '',\n    isOpen: false,\n    capsLock: false, // caps lock status to toggle case\n    shift: false, // shift status to toggle case\n    shiftDown: false, // shift status to allow click shift + key by mouse\n    brakingElements: brakingElementsArr,\n    languages: languagesArr,\n    currentLang: 'En',\n    alt: 'Alt',\n    langIndex: {\n      En: 0, EnAlt: 1, Ru: 2, RuAlt: 3,\n    },\n    keyLayout: keyboardLayoutEnRu,\n    input: null,\n    caretIndex: 0,\n    elementsPerLine: 127,\n  },\n\n  init(container) {\n    // check google chrome language\n    const lang = getLanguage();\n    // create keyboard\n    this.properties.currentLang = sessionStorage.getItem('language') || lang;\n    this.elements.main = document.createElement('div');\n    this.elements.keyboardContainer = document.createElement('div');\n\n    // setup keyboard elements\n    this.elements.main.classList.add('keyboard-panel', 'keyboard-panel_hidden');\n\n    this.elements.keyboardContainer.classList.add('keyboard-panel__keys');\n    this.elements.keyboardContainer.appendChild(this.createKeys());\n    this.elements.keys = this.elements.keyboardContainer.querySelectorAll(\n      '.key',\n    );\n\n    // add to DOM\n    this.elements.main.appendChild(this.elements.keyboardContainer);\n    container.appendChild(this.elements.main);\n\n    // add keyboard events handlers\n    keyboardEventHandler(this);\n\n    // automatically use keyboard for elements with  .use-keyboard-input\n    document.querySelectorAll('.use-keyboard-input').forEach((element) => {\n      element.addEventListener('focus', () => {\n        this.open(element);\n      });\n    });\n  },\n\n  createKeys() {\n    const fragment = document.createDocumentFragment();\n\n    // create HTML for an icon\n    const createIconHTML = (iconName) => `<i class='material-icons'>${iconName}</i>`;\n    // eslint-disable-next-line no-restricted-syntax\n    for (const keyCode in this.properties.keyLayout) {\n      if (Object.prototype.hasOwnProperty.call(this.properties.keyLayout, keyCode)) {\n        // choose proper value according to currentLang\n        const key = this.properties.keyLayout[keyCode][\n          this.properties.langIndex[this.properties.currentLang]\n        ];\n        const keyElement = document.createElement('div');\n        const keyContent = document.createElement('span');\n        const insertLineBreak = this.properties.brakingElements.indexOf(keyCode) !== -1;\n\n        // add classes\n        keyElement.classList.add('key');\n        // special keys\n        switch (keyCode) {\n          case 'Led':\n            keyElement.classList.add('special');\n            keyContent.innerHTML = createIconHTML('highlight');\n            keyElement.addEventListener('click', () => {\n              // eslint-disable-next-line no-restricted-syntax\n              for (const k of this.elements.keys) {\n                k.classList.toggle('key_led');\n              }\n            });\n            break;\n\n          case 'Lang':\n            keyElement.classList.add('special');\n            keyContent.textContent = this.properties.currentLang;\n            keyElement.appendChild(keyContent);\n\n            keyElement.addEventListener('click', () => {\n              this.changeLanguageLayout();\n            });\n            break;\n\n          case 'Backspace':\n            keyElement.classList.add('key_medium', 'special');\n            keyContent.innerHTML = createIconHTML('backspace');\n            keyElement.appendChild(keyContent);\n            keyElement.addEventListener('click', () => {\n              this.deleteSymbol(keyCode);\n            });\n            break;\n\n          case 'CapsLock':\n            keyElement.classList.add('key_medium', 'key_activatable', 'special');\n            keyContent.innerHTML = createIconHTML('keyboard_capslock');\n            keyElement.appendChild(keyContent);\n            keyElement.addEventListener('mouseup', () => {\n              this.toggleCapsLock();\n              keyElement.classList.toggle(\n                'key_activatable_active',\n                this.properties.capsLock,\n              );\n            });\n            break;\n\n          case 'Enter':\n            keyElement.classList.add('key_medium', 'special');\n            keyContent.innerHTML = createIconHTML('keyboard_return');\n            keyElement.addEventListener('click', () => {\n              this.pastSymbol('\\n');\n            });\n            break;\n\n          case 'Space':\n            keyElement.classList.add('key_extra-wide', 'special');\n            keyContent.innerHTML = createIconHTML('space_bar');\n            keyElement.addEventListener('click', () => {\n              this.pastSymbol(' ');\n            });\n            break;\n\n          case 'Tab':\n            keyElement.classList.add('key_medium', 'special');\n            keyContent.innerHTML = createIconHTML('keyboard_tab');\n            keyElement.addEventListener('click', () => {\n              this.pastSymbol('\\t');\n            });\n            break;\n\n          case 'ShiftLeft':\n          case 'ShiftRight':\n            keyElement.classList.add('key_medium', 'special');\n            keyContent.textContent = key;\n            keyElement.addEventListener('mousedown', () => {\n              // cant press shift if it is pressed already\n              if (!this.properties.shiftDown) {\n                this.toggleShift();\n                this.properties.shiftDown = true;\n                keyElement.classList.add('key_active');\n              }\n            });\n            keyElement.addEventListener('mouseup', () => {\n              // cant press shift if it is pressed already\n              if (this.properties.shiftDown) {\n                this.toggleShift();\n                this.properties.shiftDown = false;\n                keyElement.classList.remove('key_active');\n              }\n            });\n            break;\n\n          case 'ControlRight':\n          case 'ControlLeft':\n            keyElement.classList.add('key_medium', 'special');\n            keyContent.textContent = key;\n            break;\n\n          case 'AltLeft':\n          case 'AltRight':\n            keyElement.classList.add('key_medium', 'special');\n            keyContent.textContent = key;\n            break;\n\n          case 'Delete':\n            keyElement.classList.add('key_medium', 'special');\n            keyContent.textContent = key;\n            keyElement.addEventListener('click', () => {\n              this.deleteSymbol(keyCode);\n            });\n            break;\n\n          case 'Done':\n            keyElement.classList.add('special');\n            keyContent.innerHTML = createIconHTML('keyboard_hide');\n\n            keyElement.addEventListener('click', () => {\n              this.properties.value += ' ';\n              this.close();\n            });\n            break;\n\n          case 'ArrowUp':\n            keyElement.classList.add('special');\n            keyContent.innerHTML = createIconHTML('keyboard_arrow_up');\n\n            keyElement.addEventListener('click', () => {\n              this.pastSymbol('↑');\n            });\n            break;\n\n          case 'ArrowLeft':\n            keyElement.classList.add('special');\n            keyContent.innerHTML = createIconHTML('keyboard_arrow_left');\n\n            keyElement.addEventListener('click', () => {\n              const caretInd = this.properties.input.selectionStart;\n              if (caretInd > 0) {\n                this.properties.input.setSelectionRange(\n                  caretInd - 1,\n                  caretInd - 1,\n                );\n              }\n              this.onInput();\n            });\n            break;\n\n          case 'ArrowDown':\n            keyElement.classList.add('special');\n            keyContent.innerHTML = createIconHTML('keyboard_arrow_down');\n\n            keyElement.addEventListener('click', () => {\n              this.pastSymbol('↓');\n            });\n            break;\n\n          case 'ArrowRight':\n            keyElement.classList.add('special');\n            keyContent.innerHTML = createIconHTML('keyboard_arrow_right');\n\n            keyElement.addEventListener('click', () => {\n              const caretInd = this.properties.input.selectionStart;\n              if (caretInd <= this.properties.input.value.length) {\n                this.properties.input.setSelectionRange(\n                  caretInd + 1,\n                  caretInd + 1,\n                );\n              }\n              this.onInput();\n            });\n            break;\n\n          default:\n            keyContent.textContent = key;\n\n            keyElement.addEventListener('click', () => {\n              this.pastSymbol(keyContent.textContent);\n            });\n            break;\n        }\n        keyElement.setAttribute('id', keyCode);\n        keyElement.appendChild(keyContent);\n        fragment.appendChild(keyElement);\n\n        if (insertLineBreak) {\n          fragment.appendChild(document.createElement('br'));\n        }\n      }\n    }\n    return fragment;\n  },\n\n  toggleCapsLock() {\n    this.properties.capsLock = !this.properties.capsLock;\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key of this.elements.keys) {\n      if (!key.classList.contains('special')) {\n        // caps lock only change case\n        key.children[0].textContent = (this.myXor(this.properties.capsLock, this.properties.shift))\n          ? key.children[0].textContent.toUpperCase()\n          : key.children[0].textContent.toLowerCase();\n      }\n    }\n  },\n\n  toggleShift() {\n    this.properties.shift = !this.properties.shift;\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key of this.elements.keys) {\n      if (!key.classList.contains('special')) {\n        // choose basic or alt layout for given currentLang\n        const charIndex = this.properties.shift\n          ? this.properties.langIndex[this.properties.currentLang + this.properties.alt]\n          : this.properties.langIndex[this.properties.currentLang];\n        // change case for given layout based on shift and caps\n        key.children[0].textContent = (this.myXor(this.properties.capsLock, this.properties.shift))\n          ? this.properties.keyLayout[key.id][charIndex].toUpperCase()\n          : this.properties.keyLayout[key.id][charIndex].toLowerCase();\n      }\n    }\n  },\n\n  changeLanguageLayout() {\n    this.changeLanguage();\n    sessionStorage.setItem('language', this.properties.currentLang);\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key of this.elements.keys) {\n      // choose basic or alt layout for given currentLang\n      const charIndex = this.properties.shift\n        ? this.properties.langIndex[this.properties.currentLang + this.properties.alt]\n        : this.properties.langIndex[this.properties.currentLang];\n\n      if (!key.classList.contains('special')) {\n        // change case for given layout based on shift and caps\n        key.children[0].textContent = (this.myXor(this.properties.capsLock, this.properties.shift))\n          ? this.properties.keyLayout[key.id][charIndex].toUpperCase()\n          : this.properties.keyLayout[key.id][charIndex].toLowerCase();\n      } else if (key.id === 'Lang') {\n        // change language special key content\n        key.children[0].textContent = this.properties.keyLayout[key.id][\n          charIndex\n        ];\n      }\n    }\n  },\n  // change current language to the next from languages array\n  changeLanguage() {\n    const currentIndex = this.properties.languages.indexOf(\n      this.properties.currentLang,\n    );\n    const nextIndex = (currentIndex + 1 + this.properties.languages.length)\n      % this.properties.languages.length;\n    this.properties.currentLang = this.properties.languages[nextIndex];\n  },\n\n  pastSymbol(symbol) {\n    const caretInd = this.properties.input.selectionStart;\n    if (caretInd === this.properties.input.value.length) {\n      this.properties.value += symbol;\n    } else {\n      let temp = this.properties.value.split('');\n      temp.splice(caretInd, 0, symbol);\n      temp = temp.join('');\n\n      this.properties.value = temp;\n      this.onInput();\n      this.properties.input.setSelectionRange(caretInd + 1, caretInd + 1);\n    }\n    this.onInput();\n  },\n\n  deleteSymbol(operation) {\n    const shift = (operation === 'Delete') ? 0 : -1;\n    const caretInd = this.properties.input.selectionStart + shift;\n    if (caretInd <= this.properties.value.length - 1 && caretInd >= 0) {\n      let temp = this.properties.value.split('');\n      temp.splice(caretInd, 1);\n      temp = temp.join('');\n\n      this.properties.value = temp;\n      this.onInput();\n      this.properties.input.setSelectionRange(caretInd, caretInd);\n      this.onInput();\n    }\n  },\n\n  animateKeyDown(key) {\n    key.classList.add('key_active');\n  },\n\n  animateKeyUp(key) {\n    key.classList.remove('key_active');\n  },\n\n  myXor(a, b) {\n    return ((a && !b) || (!a && b));\n  },\n\n  onInput() {\n    this.properties.input.value = this.properties.value;\n    this.properties.input.scrollTop = this.properties.input.scrollHeight;\n    this.properties.input.focus();\n  },\n\n  open(element) {\n    this.properties.input = element;\n    this.properties.value = element.value || '';\n    this.elements.main.classList.remove('keyboard-panel_hidden');\n    this.properties.isOpen = true;\n  },\n\n  close() {\n    this.properties.value = '';\n    this.elements.main.classList.add('keyboard-panel_hidden');\n    this.properties.isOpen = false;\n  },\n};\n\nexport const Spare = '';\n","export const keyboardEventHandler = (keyboard) => {\n  document.addEventListener('keydown', (event) => {\n    if (keyboard.properties.isOpen) {\n      if (Object.prototype.hasOwnProperty.call(keyboard.properties.keyLayout, event.code)) {\n        event.preventDefault();\n        const element = document.getElementById(event.code);\n        if (element) {\n          keyboard.animateKeyDown(element);\n\n          switch (element.id) {\n            case 'ShiftRight':\n            case 'ShiftLeft':\n              // to prevent multiple event triggering\n              if (!keyboard.properties.shift) {\n                if (event.ctrlKey || event.altKey) {\n                  keyboard.changeLanguageLayout();\n                }\n                element.dispatchEvent(new Event('mousedown'));\n              }\n              break;\n\n            default:\n              element.dispatchEvent(new Event('click'));\n              break;\n          }\n        }\n      }\n    }\n  });\n\n  document.addEventListener('keyup', (event) => {\n    if (keyboard.properties.isOpen) {\n      if (Object.prototype.hasOwnProperty.call(keyboard.properties.keyLayout, event.code)) {\n        event.preventDefault();\n        const element = document.getElementById(event.code);\n        if (element) {\n          keyboard.animateKeyUp(element);\n          switch (element.id) {\n            case 'ShiftRight':\n            case 'ShiftLeft':\n              element.dispatchEvent(new Event('mouseup'));\n              break;\n            case 'CapsLock':\n              element.dispatchEvent(new Event('mouseup'));\n              break;\n            default:\n\n              break;\n          }\n        }\n      }\n    }\n  });\n};\n\nexport const Spare = '';\n","\n// control keys must be the same\nexport const keyboardLayoutEnRu = {\n  Backquote: ['`', '~', 'ё', 'Ё'],\n  Digit1: ['1', '!', '1', '!'],\n  Digit2: ['2', '@', '2', '\"'],\n  Digit3: ['3', '#', '3', '№'],\n  Digit4: ['4', '$', '4', ';'],\n  Digit5: ['5', '%', '5', '%'],\n  Digit6: ['6', '^', '6', ':'],\n  Digit7: ['7', '&', '7', '?'],\n  Digit8: ['8', '*', '8', '*'],\n  Digit9: ['9', '(', '9', '('],\n  Digit0: ['0', ')', '0', ')'],\n  Minus: ['-', '_', '-', '_'],\n  Equal: ['=', '+', '=', '+'],\n  Backspace: ['Backspace', 'Backspace', 'Backspace', 'Backspace'],\n  Lang: ['En', 'En', 'Рус', 'Рус'],\n  Tab: ['Tab', 'Tab', 'Tab', 'Tab'],\n  KeyQ: ['q', 'Q', 'й', 'Й'],\n  KeyW: ['w', 'W', 'ц', 'Ц'],\n  KeyE: ['e', 'E', 'у', 'У'],\n  KeyR: ['r', 'R', 'к', 'К'],\n  KeyT: ['t', 'T', 'е', 'Е'],\n  KeyY: ['y', 'Y', 'н', 'Н'],\n  KeyU: ['u', 'U', 'г', 'Г'],\n  KeyI: ['i', 'I', 'ш', 'Ш'],\n  KeyO: ['o', 'O', 'щ', 'Щ'],\n  KeyP: ['p', 'P', 'з', 'З'],\n  BracketLeft: ['[', '{', 'х', 'Х'],\n  BracketRight: [']', '}', 'ъ', 'Ъ'],\n  Delete: ['Del', 'Del', 'Del', 'Del'],\n  CapsLock: ['Caps', 'Caps', 'Caps', 'Caps'],\n  KeyA: ['a', 'A', 'ф', 'Ф'],\n  KeyS: ['s', 'S', 'ы', 'Ы'],\n  KeyD: ['d', 'D', 'в', 'В'],\n  KeyF: ['f', 'F', 'а', 'А'],\n  KeyG: ['g', 'G', 'п', 'П'],\n  KeyH: ['h', 'H', 'р', 'Р'],\n  KeyJ: ['j', 'J', 'о', 'О'],\n  KeyK: ['k', 'K', 'л', 'Л'],\n  KeyL: ['l', 'L', 'д', 'Д'],\n  Semicolon: [';', ':', 'ж', 'Ж'],\n  Quote: ['\\'', '\"', 'э', 'Э'],\n  Backslash: ['\\\\', '|', '\\\\', '/'],\n  Enter: ['Enter', 'Enter', 'Enter', 'Enter'],\n  ShiftLeft: ['Shift', 'Shift', 'Shift', 'Shift'],\n  KeyZ: ['z', 'Z', 'я', 'Я'],\n  KeyX: ['x', 'X', 'ч', 'Ч'],\n  KeyC: ['c', 'C', 'с', 'С'],\n  KeyV: ['v', 'V', 'м', 'М'],\n  KeyB: ['b', 'B', 'и', 'И'],\n  KeyN: ['n', 'N', 'т', 'Т'],\n  KeyM: ['m', 'M', 'ь', 'Ь'],\n  Comma: [',', '<', 'б', 'Б'],\n  Period: ['.', '>', 'ю', 'Ю'],\n  Slash: ['/', '?', '.', ','],\n  ShiftRight: ['Shift', 'Shift', 'Shift', 'Shift'],\n  ArrowUp: ['ArrowUp', 'ArrowUp', 'ArrowUp', 'ArrowUp'],\n  // 'IntlBackslash': ['<','>','/','|'],\n  Led: ['led', 'led', 'led', 'led'],\n  ControlLeft: ['Ctrl', 'Ctrl', 'Ctrl', 'Ctrl'],\n  AltLeft: ['Alt', 'Alt', 'Alt', 'Alt'],\n  Space: ['Space', 'Space', 'Space', 'Space'],\n  AltRight: ['Alt', 'Alt', 'Alt', 'Alt'],\n  ControlRight: ['Ctrl', 'Ctrl', 'Ctrl', 'Ctrl'],\n  Done: ['done', 'done', 'done', 'done'],\n  ArrowLeft: ['ArrowLeft', 'ArrowLeft', 'ArrowLeft', 'ArrowLeft'],\n  ArrowDown: ['ArrowDown', 'ArrowDown', 'ArrowDown', 'ArrowDown'],\n  ArrowRight: ['ArrowRight', 'ArrowRight', 'ArrowRight', 'ArrowRight'],\n};\n\nexport const brakingElementsArr = ['Lang', 'Delete', 'Enter', 'Led'];\nexport const languagesArr = ['En', 'Ru'];\n\nexport const getLanguage = () => {\n  let lang;\n  switch (navigator.language) {\n    case 'ru-RU':\n      lang = 'Ru';\n      break;\n    case 'en-EN':\n      lang = 'En';\n      break;\n    default:\n      lang = 'En';\n      break;\n  }\n  return lang;\n};\n"],"sourceRoot":""}