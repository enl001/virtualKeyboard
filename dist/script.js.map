{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/js/createDomTree.js","webpack:///./src/js/keyboard.js","webpack:///./src/js/keyboardEventHandler.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAuC;AACU;AACc;;AAE/D;AACA,EAAE,uEAAa,G;AACf,EAAE,qDAAQ;;AAEV;;AAEA,qDAAqD,+CAA+C;AACpG,8BAA8B;AAC9B,oBAAoB;AACpB,CAAC;;;;;;AAMD;;;;;;;;;;;;;;;;;ACjBO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAA4D;;AAErD;AACP;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kF;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,kFAAoB,O;;AAExB;AACA;;AAEA;AACA;AACA,wCAAwC;AACxC,OAAO;AACP,KAAK;AACL,KAAK;;AAEL;AACA;AACA,uB;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;;AAEX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;;AAEA;AACA;AACA;AACA,uC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,E;AACX,wD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,E;;;AAGX;AACA;AACA;AACA,uC;;AAEA;;AAEA;AACA;AACA;AACA,uC;;;AAGA;;AAEA;AACA;AACA,uC;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;;AAEA;AACA;AACA;;AAEA;;AAEA,cAAc;AACd;;AAEA;AACA;AACA;;AAEA;;AAEA,cAAc;AACd;;AAEA;AACA;AACA;;AAEA;;AAEA,cAAc;AACd;;AAEA;AACA;AACA;;AAEA;;AAEA,cAAc;AACd;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA,gE;AACA,mE;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH,qB;AACA;;AAEA;AACA;AACA;AACA;AACA,gE;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH,kB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;;;AAIH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6C;;;;;;;;;;;;AClYA;AAAA;AAAO;;AAEP;AACA;;AAEA,2B;AACA;AACA,iB;AACA,uC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,GAAG;AACH;AACA;AACA,6B;AACA;AACA,mB;AACA,uC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,S;AACA;AACA;AACA,KAAK,E;AACL,E","file":"script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import {Keyboard} from './js/keyboard';\r\nimport {createDomTree} from './js/createDomTree';\r\nimport {keyboardEventHandler} from './js/keyboardEventHandler';\r\n\r\nwindow.addEventListener('DOMContentLoaded', function() {\r\n  createDomTree();  \r\n  Keyboard.init(document.querySelector('.keyboard > .wrapper'), 'Ru');\r\n    \r\n  //keyboardEventHandler(Keyboard);\r\n\r\n  // Keyboard.open('dcode', function (currentValue) {console.log('value changed: ' + currentValue);},\r\n  // function (currentValue) {console.log('keyboard closed! Finishen value: ' + \r\n  // currentValue);});\r\n});\r\n\r\n\r\n\r\n\r\n\r\n//https://www.youtube.com/watch?v=N3cq0BHDMOY\r\n","\r\n\r\nexport const createDomTree = () => {\r\n  console.log('domTree');\r\n  const header = document.createElement('header');\r\n  const main = document.createElement('main');\r\n  const footer = document.createElement('footer');\r\n  const div = document.createElement('div');\r\n  const textarea = document.createElement('textarea');\r\n  const textarea1 = document.createElement('textarea');\r\n  div.classList.add('wrapper');\r\n  header.classList.add('header');\r\n  header.append(div);\r\n  main.classList.add('main');\r\n  footer.classList.add('footer');\r\n  footer.append(div);\r\n    \r\n  const screen = createSection('screen');\r\n  const keyboard = createSection('keyboard');\r\n  \r\n  \r\n  main.append(screen);\r\n  main.append(keyboard);\r\n  \r\n  \r\n  document.body.append(header);\r\n  document.body.append(main);\r\n  document.body.append(footer);\r\n  \r\n  textarea.classList.add('textarea', 'use-keyboard-input');\r\n  textarea1.classList.add('textarea', 'use-keyboard-input');\r\n  document.querySelector('.screen > .wrapper')\r\n          .appendChild(textarea);\r\n  // document.querySelector('.screen > .wrapper')\r\n  //         .appendChild(textarea1);\r\n\r\n};\r\n\r\nfunction createSection(className) {\r\n  const section = document.createElement('section');\r\n  const div = document.createElement('div');\r\n  div.classList.add('wrapper');\r\n  if (className) section.classList.add(className);\r\n  section.append(div);\r\n  return section;\r\n}","import {keyboardEventHandler} from './keyboardEventHandler';\r\n\r\nexport const Keyboard = {\r\n  elements: {\r\n    main: null,\r\n    keyboardContainer: null,\r\n    keys: []\r\n  },\r\n\r\n  eventHandlers: {\r\n    onInput: null,\r\n    onClose: null\r\n  },\r\n  \r\n  properties: {\r\n    value: '',    \r\n    isOpen: false,\r\n    capsLock: false,  // caps lock status to toggle case\r\n    shift : false,    // shift status to toggle case\r\n    shiftDown :false, // shift status to allow click shift + key by mouse\r\n    brakingElements : ['Backspace', 'Delete', 'Enter', 'ArrowUp'],\r\n    lang:'En',\r\n    alt:'Alt',\r\n    langIndex: {'En':0, 'EnAlt':1, 'Ru':2, 'RuAlt':3}\r\n  },\r\n\r\n  init(container, lang) {\r\n    // create keyboard\r\n    this.properties.lang = lang;\r\n    console.log('init with lang ' + lang);\r\n    this.elements.main = document.createElement('div');\r\n    this.elements.keyboardContainer = document.createElement('div');\r\n\r\n    // setup keyboard elements\r\n    this.elements.main.classList.add(\r\n      'keyboard-pannel',\r\n      'keyboard-pannel_hidden'\r\n    );\r\n\r\n    this.elements.keyboardContainer.classList.add('keyboard-pannel__keys');\r\n    this.elements.keyboardContainer.appendChild(this._createKeys());\r\n    this.elements.keys = this.elements.keyboardContainer.querySelectorAll('.key');  \r\n\r\n    // add to DOM\r\n    this.elements.main.appendChild(this.elements.keyboardContainer);\r\n    container.appendChild(this.elements.main);\r\n  \r\n    // add keyboard events handlers\r\n    keyboardEventHandler(this);  \r\n\r\n    // automatically use keyboard for elements with  .use-keyboard-input\r\n    document.querySelectorAll('.use-keyboard-input').forEach(element => {\r\n\r\n      element.addEventListener('focus', () => {\r\n        this.open(element, element.value, currentValue => {\r\n          element.value = currentValue;})\r\n      });\r\n    });\r\n    },\r\n\r\n  _createKeys() {\r\n    const fragment = document.createDocumentFragment();\r\n    const keyLayout = {      \r\n      'Backquote'   : ['\\`', '~',  'ё',  'Ё'],\r\n      'Digit1'      : ['1',  '!',  '1',  '!'],\r\n      'Digit2'      : ['2',  '@',  '2',  '\\\"'],\r\n      'Digit3'      : ['3',  '#',  '3',  '№'],\r\n      'Digit4'      : ['4',  '$',  '4',  ';'],\r\n      'Digit5'      : ['5',  '%',  '5',  '%'],\r\n      'Digit6'      : ['6',  '^',  '6',  ':'],\r\n      'Digit7'      : ['7',  '&',  '7',  '?'],\r\n      'Digit8'      : ['8',  '*',  '8',  '*'],\r\n      'Digit9'      : ['9',  '(',  '9',  '('],      \r\n      'Digit0'      : ['0',  ')',  '0',  ')'],\r\n      'Minus'       : ['-',  '_',  '-',  '_'],\r\n      'Equal'       : ['=',  '+',  '=',  '+'],\r\n      'Backspace'   : ['Backspace',  'Backspace',  'Backspace',  'Backspace'],\r\n      'Tab'         : ['Tab',  'Tab',  'Tab',  'Tab'],\r\n      'KeyQ'        : ['q',  'Q',  'й',  'Й'],\r\n      'KeyW'        : ['w',  'W',  'ц',  'Ц'],\r\n      'KeyE'        : ['e',  'E',  'у',  'У'],\r\n      'KeyR'        : ['r',  'R',  'к',  'К'],\r\n      'KeyT'        : ['t',  'T',  'е',  'Е'],\r\n      'KeyY'        : ['y',  'Y',  'н',  'Н'],\r\n      'KeyU'        : ['u',  'U',  'г',  'Г'],\r\n      'KeyI'        : ['i',  'I',  'ш',  'Ш'],\r\n      'KeyO'        : ['o',  'O',  'щ',  'Щ'],\r\n      'KeyP'        : ['p',  'P',  'з',  'З'],\r\n      'BracketLeft' : ['[',  '{',  'х',  'Х'],\r\n      'BracketRight': [']',  '}',  'ъ',  'Ъ'],\r\n      'Delete'      : ['Del',  'Del',  'Del',  'Del'],\r\n      'CapsLock'    : ['Caps',  'Caps',  'Caps',  'Caps'],\r\n      'KeyA'        : ['a',  'A',  'ф',  'Ф'],\r\n      'KeyS'        : ['s',  'S',  'ы',  'Ы'],\r\n      'KeyD'        : ['d',  'D',  'в',  'В'],\r\n      'KeyF'        : ['f',  'F',  'а',  'А'],\r\n      'KeyG'        : ['g',  'G',  'п',  'П'],\r\n      'KeyH'        : ['h',  'H',  'р',  'Р'],\r\n      'KeyJ'        : ['j',  'J',  'о',  'О'],\r\n      'KeyK'        : ['k',  'K',  'л',  'Л'],\r\n      'KeyL'        : ['l',  'L',  'д',  'Д'],\r\n      'Semicolon'   : [';',  ':',  'ж',  'Ж'],\r\n      'Quote'       : ['\\'',  '\\\"',  'э',  'Э'],\r\n      'Backslash'   : ['\\\\',  '|',  '\\\\',  '/'],\r\n      'Enter'       : ['Enter',  'Enter',  'Enter',  'Enter'],\r\n      'ShiftLeft'   : ['Shift',  'Shift',  'Shift',  'Shift'],\r\n      'KeyZ'        : ['z',  'Z',  'я',  'Я'],\r\n      'KeyX'        : ['x',  'X',  'ч',  'Ч'],\r\n      'KeyC'        : ['c',  'C',  'с',  'С'],\r\n      'KeyV'        : ['v',  'V',  'м',  'М'],\r\n      'KeyB'        : ['b',  'B',  'и',  'И'],\r\n      'KeyN'        : ['n',  'N',  'т',  'Т'],\r\n      'KeyM'        : ['m',  'M',  'ь',  'Ь'],\r\n      'Comma'       : [',',  '<',  'б',  'Б'],\r\n      'Period'      : ['.',  '>',  'ю',  'Ю'],\r\n      'Slash'       : ['/',  '?',  '.',  '.'],\r\n      'ShiftRight'  : ['Shift',  'Shift',  'Shift',  'Shift'],\r\n      'ArrowUp'     : ['ArrowUp',  'ArrowUp',  'ArrowUp',  'ArrowUp'],\r\n      'ControlLeft' : ['Ctrl',  'Ctrl',  'Ctrl',  'Ctrl'],\r\n      'AltLeft'     : ['Alt',  'Alt',  'Alt',  'Alt'],\r\n      'Space'       : ['Space',  'Space',  'Space',  'Space'],\r\n      'AltRight'    : ['Alt',  'Alt',  'Alt',  'Alt'],\r\n      'Done'        : ['done',  'done',  'done',  'done'],\r\n      'ArrowLeft'   : ['ArrowLeft',  'ArrowLeft',  'ArrowLeft',  'ArrowLeft'],\r\n      'ArrowDown'   : ['ArrowDown',  'ArrowDown',  'ArrowDown',  'ArrowDown'],\r\n      'ArrowRight'  : ['ArrowRight',  'ArrowRight',  'ArrowRight',  'ArrowRight']\r\n    };\r\n\r\n    // create HTML for an icon\r\n    const createIconHTML = iconName => {\r\n      return `<i class='material-icons'>${iconName}</i>`;\r\n    };\r\n    for(let keyCode in keyLayout) \r\n    {\r\n      // choose proper value according to current lang\r\n      \r\n      const key = keyLayout[keyCode][this.properties.langIndex[this.properties.lang]];\r\n      const keyElement = document.createElement('div');\r\n      const keyContent = document.createElement('span');\r\n      const insertLineBreak =\r\n        this.properties.brakingElements.indexOf(keyCode) !== -1;\r\n\r\n      //add classes\r\n      keyElement.classList.add('key');\r\n      // special keys\r\n      switch (keyCode) {\r\n        case 'Backspace':\r\n          keyElement.classList.add('key_medium', 'special');\r\n          keyContent.innerHTML = createIconHTML('backspace');\r\n          keyElement.appendChild(keyContent);\r\n          keyElement.addEventListener('click', () => {\r\n            this.properties.value = this.properties.value.substring(0,\r\n              this.properties.value.length - 1);\r\n            this._triggerEvent('onInput');\r\n          });\r\n\r\n          break;\r\n\r\n        case 'CapsLock':\r\n          keyElement.classList.add('key_medium', 'key_activatable','special');\r\n          keyContent.innerHTML = createIconHTML('keyboard_capslock');\r\n          keyElement.appendChild(keyContent);\r\n          keyElement.addEventListener('click', () => {\r\n            this._toggleCapsLock();\r\n            \r\n            keyElement.classList.toggle('key_activatable_active', this.properties.capsLock);\r\n          });\r\n\r\n          break;\r\n\r\n        case 'Enter':\r\n          keyElement.classList.add('key_medium','special');\r\n          keyContent.innerHTML = createIconHTML('keyboard_return');\r\n\r\n          keyElement.addEventListener('click', () => {\r\n            this.properties.value += '\\n';\r\n            this._triggerEvent('onInput');\r\n          });\r\n\r\n          break;\r\n\r\n        case 'Space':\r\n          keyElement.classList.add('key_extra-wide','special');\r\n          keyContent.innerHTML = createIconHTML('space_bar');\r\n\r\n          keyElement.addEventListener('click', () => {\r\n            this.properties.value += ' ';\r\n            this._triggerEvent('onInput');\r\n          });\r\n\r\n          break;\r\n\r\n          case 'Tab':\r\n          keyElement.classList.add('key_medium','special');\r\n          keyContent.innerHTML = createIconHTML('keyboard_tab');\r\n\r\n          keyElement.addEventListener('click', () => {\r\n            this.properties.value += '\\t';\r\n            this._triggerEvent('onInput');\r\n          });\r\n\r\n          break;\r\n\r\n        case 'ShiftLeft':  \r\n        case 'ShiftRight':\r\n          keyElement.classList.add('key_medium','special');\r\n          keyContent.textContent = key;  \r\n          keyElement.addEventListener('mousedown', () => {\r\n            // cant press shift if it is pressed already\r\n            if (!this.properties.shiftDown) {\r\n              this._toggleShift();\r\n              this.properties.shiftDown = true;\r\n              keyElement.classList.add('key_active');\r\n            }\r\n            \r\n          });   \r\n          keyElement.addEventListener('mouseup', () => { \r\n            // cant press shift if it is pressed already\r\n            if (this.properties.shiftDown) {\r\n              this._toggleShift();\r\n              this.properties.shiftDown = false;\r\n              keyElement.classList.remove('key_active');\r\n            }\r\n          });  \r\n               \r\n\r\n        break;\r\n        case 'ControlLeft':\r\n          keyElement.classList.add('key_medium','special');\r\n          keyContent.textContent = key;  \r\n          \r\n        break;\r\n\r\n        case 'AltLeft':\r\n        case 'AltRight':\r\n          keyElement.classList.add('key_medium','special');\r\n          keyContent.textContent = key;  \r\n          \r\n\r\n        break;\r\n\r\n        case 'Delete':\r\n          keyElement.classList.add('special');\r\n          keyContent.textContent = key;  \r\n          \r\n\r\n        break;\r\n\r\n        case 'Done':\r\n          keyElement.classList.add('key_medium','special');\r\n          keyContent.innerHTML = createIconHTML('keyboard_hide');\r\n\r\n          keyElement.addEventListener('click', () => {\r\n            this.properties.value += ' ';\r\n            this.close();\r\n            this._triggerEvent('onClose');\r\n          });\r\n\r\n          break;\r\n\r\n          case 'ArrowUp':\r\n          keyElement.classList.add('special');\r\n          keyContent.innerHTML = createIconHTML('keyboard_arrow_up');\r\n\r\n          // keyElement.addEventListener('click', () => {\r\n            \r\n          // });\r\n          break;\r\n\r\n          case 'ArrowLeft':\r\n          keyElement.classList.add('special');\r\n          keyContent.innerHTML = createIconHTML('keyboard_arrow_left');\r\n\r\n          // keyElement.addEventListener('click', () => {\r\n            \r\n          // });\r\n          break;\r\n\r\n          case 'ArrowDown':\r\n          keyElement.classList.add('special');\r\n          keyContent.innerHTML = createIconHTML('keyboard_arrow_down');\r\n\r\n          // keyElement.addEventListener('click', () => {\r\n            \r\n          // });\r\n          break;\r\n\r\n          case 'ArrowRight':\r\n          keyElement.classList.add('special');\r\n          keyContent.innerHTML = createIconHTML('keyboard_arrow_right');\r\n\r\n          // keyElement.addEventListener('click', () => {\r\n            \r\n          // });\r\n          break;\r\n\r\n        default:\r\n\r\n          \r\n          keyContent.textContent = key;\r\n\r\n          keyElement.addEventListener('click', () => {\r\n            \r\n            let charIndex = (this.properties.capsLock ^ this.properties.shift)\r\n              ? this.properties.langIndex[this.properties.lang+this.properties.alt]\r\n              : this.properties.langIndex[this.properties.lang]; \r\n            this.properties.value += keyLayout[keyCode][charIndex]; \r\n            this._triggerEvent('onInput');\r\n          });\r\n\r\n          break;\r\n      }\r\n      keyElement.setAttribute('id',keyCode);\r\n      keyElement.appendChild(keyContent);\r\n      fragment.appendChild(keyElement);\r\n\r\n      if (insertLineBreak) {\r\n        fragment.appendChild(document.createElement('br'));\r\n      }\r\n    };\r\n    return fragment;\r\n  },\r\n\r\n  _triggerEvent(handlerName) {\r\n    if (typeof this.eventHandlers[handlerName] == 'function'){\r\n      this.eventHandlers[handlerName](this.properties.value);\r\n    }\r\n  },\r\n\r\n  _toggleCapsLock() {    \r\n    this.properties.capsLock = !this.properties.capsLock;\r\n    \r\n    for (const key of this.elements.keys){\r\n      if(!key.classList.contains('special')) {\r\n        let charIndex = (this.properties.capsLock ^ this.properties.shift)\r\n              ? this.properties.langIndex[this.properties.lang+this.properties.alt]\r\n              : this.properties.langIndex[this.properties.lang];             \r\n\r\n        key.children[0].textContent = keyLayout[keyCode][charIndex];\r\n        \r\n      }\r\n    }\r\n  },\r\n\r\n  _toggleShift() {    \r\n    this.properties.shift = !this.properties.shift;\r\n    \r\n    for (const key of this.elements.keys){\r\n      if(!key.classList.contains('special')) {\r\n        key.children[0].textContent = \r\n        (this.properties.capsLock ^ this.properties.shift) ? \r\n        key.children[0].textContent.toUpperCase() : \r\n        key.children[0].textContent.toLowerCase();\r\n      }\r\n    }\r\n  },  \r\n\r\n  animateKeyDown(key){\r\n    key.classList.add('key_active');\r\n  },\r\n  animateKeyUp(key){\r\n    key.classList.remove('key_active');\r\n  },\r\n\r\n\r\n\r\n  open(element, initialValue, onInput, onClose) {\r\n    console.log('open on element ' + element);\r\n    this.properties.value = initialValue || '';\r\n    this.eventHandlers.onInput = onInput;\r\n    this.eventHandlers.onClose = onClose;\r\n    this.elements.main.classList.remove('keyboard-pannel_hidden');\r\n    this.properties.isOpen = true;\r\n    \r\n  },\r\n\r\n  close() {\r\n    console.log('close');\r\n    this.properties.value = '';\r\n    this.eventHandlers.onInput = null;\r\n    this.eventHandlers.onClose = null;\r\n    this.elements.main.classList.add('keyboard-pannel_hidden');\r\n    this.properties.isOpen = false;\r\n  }\r\n};\r\n\r\n//https://learn.javascript.ru/keyboard-events","export const keyboardEventHandler = (keyboard) => {\r\n  \r\n  window.addEventListener('keydown', (event) => {\r\n  if(keyboard.properties.isOpen) {\r\n    \r\n    event.preventDefault();    \r\n    let element = document.getElementById(event.code);\r\n    if(element) {       \r\n      keyboard.animateKeyDown(element);   \r\n      switch (element.id) {\r\n        case 'ShiftRight' :\r\n        case 'ShiftLeft' :\r\n        // to prevent multiple event triggering\r\n        if(!keyboard.properties.shift) {\r\n          element.dispatchEvent(new Event('mousedown'));\r\n        }\r\n          break;\r\n\r\n        default:\r\n          element.dispatchEvent(new Event('click'));\r\n          break;\r\n\r\n      }\r\n       \r\n    }\r\n\r\n  }\r\n  });\r\n  window.addEventListener('keyup', (event) => {\r\n    if(keyboard.properties.isOpen) {\r\n      event.preventDefault();      \r\n      let element = document.getElementById(event.code);\r\n      if(element) {        \r\n        keyboard.animateKeyUp(element);  \r\n        switch (element.id) {\r\n          case 'ShiftRight' :\r\n          case 'ShiftLeft' :\r\n            element.dispatchEvent(new Event('mouseup'));\r\n            break;\r\n  \r\n          default:\r\n            \r\n            break;\r\n  \r\n        }   \r\n      }\r\n    }\r\n    });  \r\n};"],"sourceRoot":""}